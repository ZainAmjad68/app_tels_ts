{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.ts","webpack:///./src/config/environments sync ^\\.\\/.*\\.json$","webpack:///./src/config/index.ts","webpack:///./src/config/schema/schema.ts","webpack:///./src/controllers/tels.ts","webpack:///./src/data/TELS_constants.ts","webpack:///./src/data/TELS_urls.ts","webpack:///./src/middleware/index.ts","webpack:///./src/modules/accessToken.ts","webpack:///./src/modules/request.ts","webpack:///./src/modules/tels.ts","webpack:///./src/routes/index.ts","webpack:///./src/routes/tels/tels.router.ts","webpack:///./src/server.ts","webpack:///external \"aws-sdk\"","webpack:///external \"aws-serverless-express/middleware\"","webpack:///external \"body-parser\"","webpack:///external \"bunyan\"","webpack:///external \"convict\"","webpack:///external \"cookie-parser\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"lodash\"","webpack:///external \"path\"","webpack:///external \"request-promise\"","webpack:///external \"request-promise/errors\"","webpack:///external \"url-join\"","webpack:///external \"uuid\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA,iDAAa;AACb,gBAAgB,mBAAO,CAAC,wBAAS;AACjC,uCAAuC,mBAAO,CAAC,4EAAmC;AAClF,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,mBAAmB,mBAAO,CAAC,gCAAa;AACxC,qBAAqB,mBAAO,CAAC,oCAAe;AAC5C,aAAa,mBAAO,CAAC,kBAAM;AAC3B;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA,gBAAgB,+BAA+B;AAC/C,eAAe,mBAAO,CAAC,uCAAU;AACjC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBa;AACb,eAAe,mBAAO,CAAC,sDAAiB;AACxC,wBAAwB,kFAAQ,IAAiB;AACjD;AACA,IAAI,OAAO,CAAC;AACZ;AACA,iBAAiB,oBAAoB;AACrC;;;;;;;;;;;;;ACPa;AACb,gBAAgB,mBAAO,CAAC,wBAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;;;;;;;ACjDY;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,UAAU,mBAAO,CAAC,sBAAQ;AAC1B,gBAAgB,mBAAO,CAAC,0BAAU;AAClC,sBAAsB,mBAAO,CAAC,oDAAoB;AAClD,eAAe,mBAAO,CAAC,wCAAW;AAClC,+BAA+B,mBAAO,CAAC,8CAAiB;AACxD,yBAAyB,mBAAO,CAAC,4DAAwB;AACzD,iBAAiB,mBAAO,CAAC,kDAAmB;AAC5C,iBAAiB,mBAAO,CAAC,sDAAwB;AACjD;AACA;AACA;AACA,iBAAiB,6BAA6B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AAC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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB,IAAI,GAAG,8BAA8B;AACtD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB,IAAI,GAAG,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjPa;AACb;AACA,4CAA4C;AAC5C;AACA,kCAAkC,mBAAO,CAAC,wBAAS;AACnD;AACA,mBAAmB,mBAAO,CAAC,4DAAoB;AAC/C,WAAW,mBAAO,CAAC,sDAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACba;AACb;AACA,4CAA4C;AAC5C;AACA,gBAAgB,mBAAO,CAAC,wBAAS;AACjC;AACA,+BAA+B,mBAAO,CAAC,yDAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,6CAAgB;AACvC,YAAY,mBAAO,CAAC,2BAAO;AAC3B;AACA,kEAAkE,KAAK;AACvE;;;;;;;;;;;;ACNA,oC;;;;;;;;;;;ACAA,8D;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,iC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.ts\");\n","\"use strict\";\nconst express = require(\"express\");\nconst awsServerlessExpressMiddleware = require(\"aws-serverless-express/middleware\");\nconst helmet = require(\"helmet\");\nconst bodyParser = require(\"body-parser\");\nconst cookieParser = require(\"cookie-parser\");\nconst path = require(\"path\");\nconst app = express();\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(cookieParser());\napp.use(awsServerlessExpressMiddleware.eventContext());\napp.use(helmet({ contentSecurityPolicy: false }));\nconst routes = require(\"./routes\");\napp.use(\"/api\", routes);\napp.set(\"views\", path.join(__dirname, \"views\"));\napp.set(\"view engine\", \"ejs\");\napp.use(\"/public\", express.static(__dirname + \"/public\"));\nmodule.exports = app;\n","var map = {\n\t\"./development.json\": \"./src/config/environments/development.json\",\n\t\"./production.json\": \"./src/config/environments/production.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/config/environments sync recursive ^\\\\.\\\\/.*\\\\.json$\";","\"use strict\";\nconst schema = require(\"./schema/schema\");\nvar environmentConfig = require(\"./environments/\" +\n    schema.get(\"environment\") +\n    \".json\");\nschema.load(environmentConfig);\nschema.validate({ allowed: \"strict\" });\nmodule.exports = schema;\n","\"use strict\";\nconst convict = require(\"convict\");\nmodule.exports = convict({\n    environment: {\n        doc: \"Specifies the running environment of tels-integration-api\",\n        format: String,\n        env: \"NODE_ENV\",\n        default: \"development\",\n    },\n    caremergeTELSid: {\n        doc: \"Person ID given to Caremerge to use TEL's services.\",\n        format: String,\n        default: \"2605055\",\n    },\n    Port: {\n        doc: \"Port to use for the server.\",\n        format: Number,\n        default: 8080,\n    },\n    tels: {\n        baseUrl: {\n            doc: \"TEL's environment url.\",\n            format: String,\n            default: \"https://services.tels.net\",\n        },\n        refreshToken: {\n            doc: \"TEL's provided refresh token used to get access token\",\n            format: String,\n            default: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRobWV0aG9kIjoiVHJ1c3QiLCJnaXZlbl9uYW1lIjoiQ2FyZW1lcmdlIiwiZmFtaWx5X25hbWUiOiJJbnRlZ3JhdGlvbiIsIkRTOkFjY291bnRJRCI6IjEyMDEyOTQiLCJEUzpVc2VyIjoiN2MwYzZmYzYtNzQyMS00MjVjLWIzYzktZWM1YzIyYzNjMWU1IiwiRFM6UGVyc29uSWQiOiIyNjA1MDU1IiwiRFM6UGVyc29uYSI6IjgiLCJEUzpSb2xlcyI6IjAiLCJEUzpGYWNpbGl0eUlEcyI6IjEzODI2NiIsImlzcyI6InNlcnZpY2VzLnRlbHMubmV0IiwiYXVkIjoic2VydmljZXMudGVscy5uZXQiLCJleHAiOjE2MTM2Njc0MzgsIm5iZiI6MTYxMzY2NzI1OH0.c5RgpI_7okku4-CvvAQGoRJv_sVOMx2CrAqP5muV8z8\",\n        },\n        jwtSecret: {\n            doc: \"JWT secret to authenticate a call to TELS App\",\n            format: String,\n            env: \"JWT_SECRET\",\n            default: \"HelloWorld\",\n        },\n    },\n    app: {\n        table: {\n            doc: \"Tha name of the table that contains Resident -> WorkOrder mapping\",\n            format: String,\n            default: \"tels_workorders\",\n        },\n        name: {\n            doc: \"Tha name of the integration app\",\n            format: String,\n            default: \"TELS Integration App\",\n        },\n    },\n});\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst urljoin = require(\"url-join\");\nconst requestModule = require(\"../modules/request\");\nconst config = require(\"../config\");\nconst tels_1 = __importDefault(require(\"../modules/tels\"));\nconst TELS_constants_1 = require(\"../data/TELS_constants\");\nconst TELSurls = require(\"../data/TELS_urls\");\nconst errors_1 = require(\"request-promise/errors\");\nconst init = function (req, res) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            let { businessUnitId, residentId } = req;\n            console.log(\"residentId\", residentId);\n            console.log(\"businessUnitId\", businessUnitId);\n            let workOrders;\n            let DBresponse = yield tels_1.default.getWorkOrdersByResidentId(residentId);\n            // won't reach here if the returned value is an error\n            workOrders = DBresponse;\n            req.log.info({ workOrders });\n            let workOrderDetails = yield tels_1.default.getResidentWorkOrdersByID(businessUnitId, workOrders, req.accessToken);\n            res.cookie(\"token\", req.query.token, {\n                maxAge: 1000 * 60 * 30,\n                httpOnly: true,\n                sameSite: 'none',\n                secure: true\n            });\n            res.removeHeader(\"X-Frame-Options\");\n            res.render(\"pages/index\", {\n                workOrderDetails,\n                categories: TELS_constants_1.categories,\n                priorities: TELS_constants_1.priorities,\n                businessUnitId,\n                residentId,\n            });\n        }\n        catch (err) {\n            req.log.info(\"Error: failed to load the Tels main endpoint\");\n            req.log.info({ err: err });\n            if (err instanceof errors_1.StatusCodeError) {\n                res.status(err.statusCode || 500).send(err.message);\n            }\n            else if (err instanceof Error) {\n                res.send(err);\n            }\n        }\n    });\n};\nconst getWorkOrders = function (req, res) {\n    var _a, _b, _c;\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            // req.query can't handle array query parameters as its not supported by aws-serverless-express, so getting the array parameters directly from event\n            let workOrders = (_c = (_b = (_a = req === null || req === void 0 ? void 0 : req.apiGateway) === null || _a === void 0 ? void 0 : _a.event) === null || _b === void 0 ? void 0 : _b.multiValueQueryStringParameters) === null || _c === void 0 ? void 0 : _c.workOrders;\n            req.log.info({ workOrders }, \"query WorkOrders\");\n            let workOrderDetails = yield Promise.all(_.map(workOrders, (workOrder) => __awaiter(this, void 0, void 0, function* () {\n                return tels_1.default.getSingleWorkOrder(workOrder, req.accessToken);\n            })));\n            let responseStatus = 200;\n            req.log.info(workOrderDetails);\n            workOrderDetails.forEach((workOrder) => {\n                if (workOrder instanceof errors_1.StatusCodeError) {\n                    responseStatus = 422;\n                }\n            });\n            return res.status(responseStatus).json(_.map(workOrderDetails, \"value\"));\n        }\n        catch (err) {\n            req.log.info(\"Error: failed to get the work orders:\");\n            req.log.info({ err: err });\n            if (err instanceof errors_1.StatusCodeError) {\n                res.status(err.statusCode || 500).send(err.message);\n            }\n            else if (err instanceof Error) {\n                res.send(err);\n            }\n        }\n    });\n};\nconst getFacilityWorkOrdersByID = function (req, res) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            // the facility id of TELS is provided in the req.query here, currently there's only one but will be many more in future\n            let url = urljoin(config.get(\"tels\").baseUrl, TELSurls.workOrderUrl);\n            url = new URL(url);\n            let searchParams = url.searchParams;\n            for (var property in req.query) {\n                searchParams.set(property, req.query[property]);\n            }\n            let response = yield requestModule.sendRequest({\n                method: \"GET\",\n                url: url,\n                accessToken: req.accessToken,\n            });\n            while (response.nextPageKey) {\n                searchParams.set(\"pageKey\", response.nextPageKey);\n                let nextPageData = yield requestModule.sendRequest({\n                    method: \"GET\",\n                    url: url,\n                    accessToken: req.accessToken,\n                });\n                response.workOrders = [\n                    ...response.workOrders,\n                    ...nextPageData.workOrders,\n                ];\n                response.total = nextPageData.total;\n                response.nextPageKey = nextPageData.nextPageKey;\n            }\n            req.log.info(response);\n            if (_.isArray(response.workOrders)) {\n                req.log.info(\"Details of all the Work Orders:\", response.workOrders);\n                req.log.info(\"Number of Work Orders in the Facility:\", response.total);\n            }\n            let workOrderData = _.map(response.workOrders, (workOrder) => {\n                return _.pick(workOrder, [\n                    \"authorizationNumber\",\n                    \"title\",\n                    \"description\",\n                    \"whereLocated\",\n                    \"createdWhen\",\n                ]);\n            });\n            res.status(200).json(workOrderData);\n        }\n        catch (err) {\n            req.log.info(\"Error: failed to get work orders for entire facility using IDs\");\n            req.log.info({ err: err });\n            if (err instanceof errors_1.StatusCodeError) {\n                res.status(err.statusCode || 500).send(err.message);\n            }\n            else if (err instanceof Error) {\n                res.send(err);\n            }\n        }\n    });\n};\nconst createWorkOrder = function (req, res) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            // req.body has form data that is used to create the work order\n            req.log.info(\"Create Work Order Request Body:\", req.body);\n            req.log.info(\"Create Work Order Request Query Parameters:\", req.query);\n            let url = urljoin(config.get(\"tels\").baseUrl, TELSurls.workOrderUrl);\n            req.body.facilityId = req.businessUnitId;\n            let response = yield tels_1.default.createWorkOrder(url, req.body, req.accessToken);\n            if (response && response.stack && response.message) {\n                throw response;\n            }\n            req.log.info(\"Work Order successfully created in TELS.\");\n            let workOrder = response.entityIdentifier;\n            yield tels_1.default.putWorkOrderInDB(req.residentId, workOrder);\n            res.status(200).json(response);\n        }\n        catch (err) {\n            req.log.info(\"Error: failed to create the work order\");\n            req.log.info({ err: err });\n            if (err instanceof errors_1.StatusCodeError) {\n                res.status(err.statusCode || 500).send(err.message);\n            }\n            else if (err instanceof Error) {\n                res.send(err);\n            }\n        }\n    });\n};\nconst editWorkOrder = function (req, res) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            let workOrders = req.body;\n            req.log.info({ body: req.body }, \"Request Body:\");\n            const responseStatus = yield tels_1.default.editWorkOrder(workOrders, req.accessToken);\n            if (responseStatus && responseStatus.stack && responseStatus.message) {\n                throw responseStatus;\n            }\n            let backURL = req.header(\"Referer\") || \"/\";\n            res.redirect(responseStatus, backURL);\n        }\n        catch (err) {\n            req.log.info(\"Error: failed to edit the work order\");\n            req.log.info({ err: err });\n            if (err instanceof errors_1.StatusCodeError) {\n                res.status(err.statusCode || 500).send(err.message);\n            }\n            else if (err instanceof Error) {\n                res.send(err);\n            }\n        }\n    });\n};\nexports.default = {\n    init,\n    getWorkOrders,\n    getFacilityWorkOrdersByID,\n    createWorkOrder,\n    editWorkOrder,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.priorities = exports.statuses = exports.categories = void 0;\nexports.categories = [\n    {\n        id: 17,\n        name: \"Administrative\",\n    },\n    {\n        id: 16,\n        name: \"Calibration\",\n    },\n    {\n        id: 6,\n        name: \"Cleaning\",\n    },\n    {\n        id: 12,\n        name: \"Drain Cleaning\",\n    },\n    {\n        id: 3,\n        name: \"Electrical\",\n    },\n    {\n        id: 7,\n        name: \"General Maintenance\",\n    },\n    {\n        id: 5,\n        name: \"Grounds Work\",\n    },\n    {\n        id: 10,\n        name: \"HVAC\",\n    },\n    {\n        id: 18,\n        name: \"IT Request\",\n    },\n    {\n        id: 13,\n        name: \"Kitchen Repair\",\n    },\n    {\n        id: 14,\n        name: \"Landscaping\",\n    },\n    {\n        id: 8,\n        name: \"Life Safety\",\n    },\n    {\n        id: 1,\n        name: \"Mechanical\",\n    },\n    {\n        id: 2,\n        name: \"Plumbing\",\n    },\n    {\n        id: 4,\n        name: \"Roof\",\n    },\n    {\n        id: 11,\n        name: \"Room Turn\",\n    },\n    {\n        id: 15,\n        name: \"Snow Removal\",\n    },\n    {\n        id: 9,\n        name: \"Vehicle Repair\",\n    },\n], exports.statuses = [\n    {\n        name: \"Open\",\n        value: 1,\n    },\n    {\n        name: \"In-Progress\",\n        value: 2,\n    },\n    {\n        name: \"Completed\",\n        value: 3,\n    },\n    {\n        name: \"Cancelled\",\n        value: 9,\n    },\n], exports.priorities = [\n    {\n        name: \"Critical\",\n        value: 1,\n    },\n    {\n        name: \"High\",\n        value: 2,\n    },\n    {\n        name: \"Low\",\n        value: 4,\n    },\n    {\n        name: \"Medium\",\n        value: 3,\n    },\n];\n","\"use strict\";\nmodule.exports = {\n    facilityUrl: \"customers/v1/contacts\",\n    workOrderUrl: \"workOrders/v1/workOrders\",\n    OAuthUrl: \"auth/token/refresh\",\n    workOrderCategories: \"workOrders/v1/categories\",\n    workOrderPriorities: \"workOrders/v1/priorities\",\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyJWTtoken = exports.attachTokenToRequest = exports.loadLogger = void 0;\nconst bunyan = require(\"bunyan\");\nconst uuid_1 = require(\"uuid\");\nconst _ = require(\"lodash\");\nconst jwt = require(\"jsonwebtoken\");\nconst config = require(\"../config\");\nconst accessTokenModule = require(\"../modules/accessToken\");\nlet accessToken;\nfunction loadLogger(req, res, next) {\n    req.log = bunyan.createLogger({\n        name: \"tels-logger\",\n        req_id: _.has(req.headers, \"X-Amzn-Trace-Id\")\n            ? req.headers[\"X-Amzn-Trace-Id\"]\n            : (0, uuid_1.v4)(),\n        serializers: { err: bunyan.stdSerializers.err },\n    });\n    next();\n}\nexports.loadLogger = loadLogger;\nfunction verifyJWTtoken(req, res, next) {\n    try {\n        let token = req.query.token\n            ? req.query.token\n            : req.cookies.token\n                ? req.cookies.token\n                : res\n                    .status(401)\n                    .send(\"No Access Token Provided or Cookies Expired. Authentication Failed.\");\n        req.log.info(\"JWT Token: \", token);\n        var tokenClaims = jwt.verify(token, config.get(\"tels\").jwtSecret);\n        req.log.info(\"JWT Token Payload/Claims after Verification: \", tokenClaims);\n        req.residentId = tokenClaims.userId;\n        req.businessUnitId = tokenClaims.businessUnitId;\n        next();\n    }\n    catch (err) {\n        req.log.info(`Error:${err}`);\n        res.status(401).send(\"Access Token Provided is Invalid.\");\n    }\n}\nexports.verifyJWTtoken = verifyJWTtoken;\nfunction attachTokenToRequest(req, res, next) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!accessToken) {\n            accessToken = yield accessTokenModule.refreshTELSAccessToken();\n        }\n        req.accessToken = accessToken;\n        next();\n    });\n}\nexports.attachTokenToRequest = attachTokenToRequest;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst requestModule = require(\"./request\");\nconst config = require(\"../config\");\nconst urljoin = require(\"url-join\");\nconst TELSurls = require(\"../data/TELS_urls\");\nfunction refreshTELSAccessToken() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = urljoin(config.get(\"tels\").baseUrl, TELSurls.OAuthUrl);\n        let access_token = {\n            refreshToken: config.get(\"tels\").refreshToken,\n        };\n        // use something like express-session or node-cache to keep the data saved during a client's interaction and get from there instead of making a new request everytime\n        let response = yield requestModule.sendRequest({\n            method: \"POST\",\n            url: url,\n            data: access_token,\n        });\n        return response.accessToken;\n    });\n}\nmodule.exports = {\n    refreshTELSAccessToken: refreshTELSAccessToken,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendRequest = exports.options = void 0;\nconst rp = require(\"request-promise\");\nconst errors_1 = require(\"request-promise/errors\");\nexports.options = {\n    POST: { headers: true },\n    GET: { gzip: true, headers: true },\n    PATCH: {\n        resolveWithFullResponse: true,\n        headers: true,\n    },\n    SIMPLEPOST: {},\n};\nfunction sendRequest(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            // options that are common for every request\n            let httpOptions = {\n                method: params.method,\n                uri: params.url.toString(),\n                json: true,\n            };\n            let attributes = exports.options[params.method];\n            // append options that are different for each request type\n            Object.assign(httpOptions, attributes);\n            if (httpOptions[\"headers\"] !== undefined) {\n                httpOptions.headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + params.accessToken,\n                };\n            }\n            if (params.data !== undefined) {\n                httpOptions.body = params.data;\n            }\n            return yield rp(httpOptions);\n        }\n        catch (err) {\n            if (err instanceof errors_1.StatusCodeError) {\n                // Not Authorized error, maybe refresh the user's auth token?\n                if (err.statusCode === 401) {\n                    err.message = \"Refresh Token was rejected.\";\n                    return err;\n                }\n                else if (err.statusCode === 404) {\n                    // Not Found, the server was unable to locate the resource\n                    err.message = \"Invalid Endpoint. Unable to Locate the Resource.\";\n                    return err;\n                }\n                else if (err.statusCode === 500) {\n                    // Interal Server, something went wrong with the server itself!\n                    err.message = \"Internal Error. Server is Down.\";\n                    return err;\n                }\n            }\n            else if (err instanceof errors_1.RequestError) {\n                // something went wrong in the process of making the request\n                // maybe the internet connection dropped\n                err.message = \"Unable to make the request. Check Internet Connection.\";\n            }\n            return err;\n        }\n    });\n}\nexports.sendRequest = sendRequest;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst urljoin = require(\"url-join\");\nconst AWS = require(\"aws-sdk\");\nconst requestModule = require(\"../modules/request\");\nconst config = require(\"../config\");\nconst TELS_constants_1 = require(\"../data/TELS_constants\");\nconst TELSurls = require(\"../data/TELS_urls\");\nvar docClient = new AWS.DynamoDB.DocumentClient();\nconst getSingleWorkOrder = function (workOrder, access_token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = urljoin(config.get(\"tels\").baseUrl, TELSurls.workOrderUrl);\n        url = `${url}/${workOrder}`;\n        console.log(\"The URL of the Request:\", url);\n        let response;\n        try {\n            response = yield requestModule.sendRequest({\n                method: \"GET\",\n                url: url,\n                accessToken: access_token,\n            });\n            if (response && response.stack && response.message) {\n                throw response;\n            }\n        }\n        catch (err) {\n            throw err;\n        }\n        let relevantData = _.pick(response, [\n            \"authorizationNumber\",\n            \"title\",\n            \"description\",\n            \"createdWhen\",\n            \"whereLocated\",\n            \"status\",\n            \"priority\",\n            \"category\",\n        ]);\n        const findStatus = TELS_constants_1.statuses.find((status) => status.value === relevantData.status);\n        relevantData.status = findStatus === null || findStatus === void 0 ? void 0 : findStatus.name;\n        return relevantData;\n        /*}*/\n    });\n};\nconst getWorkOrderCategories = function (access_token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = urljoin(config.get(\"tels\").baseUrl, TELSurls.workOrderCategories);\n        console.log(\"The URL of the Request:\", url);\n        let response = yield requestModule.sendRequest({\n            method: \"GET\",\n            url: url,\n            accessToken: access_token,\n        });\n        return response;\n    });\n};\nconst getWorkOrdersByResidentId = function (residentId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let workOrders;\n        var params = {\n            TableName: config.get(\"app\").table,\n            ExpressionAttributeValues: {\n                \":residentId\": residentId,\n            },\n            ExpressionAttributeNames: {\n                \"#residentId\": \"residentId\",\n            },\n            KeyConditionExpression: \"#residentId = :residentId\",\n            ScanIndexForward: false, // to sort the results returned in Descending Order\n        };\n        try {\n            const awsRequest = yield docClient.query(params);\n            const result = yield awsRequest.promise();\n            console.log(\"Result fetched from AWS:\", result);\n            workOrders = _.map(result.Items, \"workOrder\");\n        }\n        catch (err) {\n            console.log(\"Query to Database Failed.\");\n            console.log(err);\n            throw err;\n        }\n        return workOrders;\n    });\n};\nconst putWorkOrderInDB = function (residentId, workOrder) {\n    return __awaiter(this, void 0, void 0, function* () {\n        console.log(\"residentId to put in DB:\", residentId);\n        console.log(\"workOrder to put in DB:\", workOrder);\n        var params = {\n            TableName: config.get(\"app\").table,\n            Item: {\n                residentId: residentId,\n                workOrder: workOrder,\n            },\n        };\n        try {\n            console.log(\"Adding a new item...\");\n            const awsRequest = yield docClient.put(params);\n            yield awsRequest.promise();\n            console.log(\"WorkOrder Data added to DynamoDB Successfully.\");\n        }\n        catch (err) {\n            console.log(\"Unable to Add Data into DynamoDB.\");\n            throw err;\n        }\n    });\n};\nconst getTELSfacilityId = function (facilityName, access_token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = urljoin(config.get(\"tels\").baseUrl, TELSurls.facilityUrl, config.get(\"caremergeTELSid\"), \"facilities\");\n        console.log(\"The URL of the Request:\", url);\n        let response = yield requestModule.sendRequest({\n            method: \"GET\",\n            url: url,\n            accessToken: access_token,\n        });\n        let userFacility = _.find(response, (facility) => {\n            return facility.name === facilityName;\n        });\n        return userFacility.businessUnitId;\n    });\n};\nfunction getAllFacilities(accessToken) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = urljoin(config.get(\"tels\").baseUrl, TELSurls.facilityUrl);\n        url = `${url}/${config.get(\"caremergeTELSid\")}/facilities`;\n        let response = yield requestModule.sendRequest({\n            method: \"GET\",\n            url: url,\n            accessToken: accessToken,\n        });\n        console.log(response);\n        if (_.isArray(response)) {\n            return response;\n        }\n    });\n}\nconst getUserFacility = function (facilityName, accessToken) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let allFacilities = yield getAllFacilities(accessToken);\n        let userFacility = _.find(allFacilities, (facility) => {\n            return facility.name === facilityName;\n        });\n        return userFacility.businessUnitId;\n    });\n};\nconst editWorkOrder = function (workOrder, access_token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = urljoin(config.get(\"tels\").baseUrl, TELSurls.workOrderUrl);\n        url = `${url}/${workOrder.authorizationNumber}`;\n        console.log(url);\n        delete workOrder.authorizationNumber;\n        let data = [];\n        for (var params of Object.keys(workOrder)) {\n            data.push({\n                value: workOrder[params],\n                path: params,\n                op: \"replace\",\n            });\n        }\n        try {\n            let response = yield requestModule.sendRequest({\n                method: \"PATCH\",\n                url: url,\n                accessToken: access_token,\n                data: data,\n            });\n            return response.statusCode;\n        }\n        catch (err) {\n            return err;\n        }\n    });\n};\nconst createWorkOrder = function (url, data, accessToken) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let response = yield requestModule.sendRequest({\n            method: \"POST\",\n            url: url,\n            accessToken: accessToken,\n            data: data,\n        });\n        return response;\n    });\n};\nconst getResidentWorkOrdersByID = function (businessUnitId, workOrderIds, accessToken) {\n    return __awaiter(this, void 0, void 0, function* () {\n        console.log(\"workOrderIds\", workOrderIds);\n        let url = urljoin(config.get(\"tels\").baseUrl, TELSurls.workOrderUrl);\n        url = new URL(url);\n        let searchParams = url.searchParams;\n        searchParams.set(\"businessUnitId\", businessUnitId);\n        let response = yield requestModule.sendRequest({\n            method: \"GET\",\n            url: url,\n            accessToken: accessToken,\n        });\n        while (response.nextPageKey) {\n            searchParams.set(\"pageKey\", response.nextPageKey);\n            let nextPageData = yield requestModule.sendRequest({\n                method: \"GET\",\n                url: url,\n                accessToken: accessToken,\n            });\n            response.workOrders = [...response.workOrders, ...nextPageData.workOrders];\n            response.nextPageKey = nextPageData.nextPageKey;\n        }\n        if (response && response.stack && response.message) {\n            throw response;\n        }\n        const workOrderDetails = _.map(workOrderIds, (id) => _.find(response.workOrders, (workOrder) => workOrder.authorizationNumber === id));\n        console.log(\"workOrderDetails\", workOrderDetails);\n        workOrderDetails.forEach(\n        // to convert the status id into name that the user can understand\n        (workOrder) => {\n            var _a;\n            return (workOrder.status = (_a = _.find(TELS_constants_1.statuses, (status) => status.value === workOrder.status)) === null || _a === void 0 ? void 0 : _a.name);\n        });\n        return workOrderDetails;\n    });\n};\nexports.default = {\n    getSingleWorkOrder,\n    getWorkOrderCategories,\n    getWorkOrdersByResidentId,\n    putWorkOrderInDB,\n    getTELSfacilityId,\n    getUserFacility,\n    editWorkOrder,\n    createWorkOrder,\n    getResidentWorkOrdersByID,\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst express_1 = __importDefault(require(\"express\"));\nconst router = express_1.default.Router();\nconst telsRouter = require(\"./tels/tels.router\");\nconst md = require(\"../middleware/index\");\n// TELS specific middlewares\nrouter.use(md.loadLogger);\nrouter.use(md.verifyJWTtoken);\nrouter.use(md.attachTokenToRequest);\nrouter.use(\"/tels/v1\", telsRouter);\nmodule.exports = router;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst express = require(\"express\");\nconst telsRouter = express.Router();\nconst tels_1 = __importDefault(require(\"../../controllers/tels\"));\ntelsRouter.get(\"/\", tels_1.default.init);\ntelsRouter.get(\"/workorders\", tels_1.default.getWorkOrders);\ntelsRouter.get(\"/facility-workOrders-by-id\", tels_1.default.getFacilityWorkOrdersByID);\ntelsRouter.post(\"/create-workorder\", tels_1.default.createWorkOrder);\ntelsRouter.post(\"/edit-workorder\", tels_1.default.editWorkOrder);\nmodule.exports = telsRouter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst config = require(\"./config/index\");\nconst app = require(\"./app\");\nconst port = config.get(\"Port\") || 8080;\napp.listen(port, () => console.log(`Server is listening on port ${port}.`));\n//      /api/tels/v1/\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"aws-serverless-express/middleware\");","module.exports = require(\"body-parser\");","module.exports = require(\"bunyan\");","module.exports = require(\"convict\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"express\");","module.exports = require(\"helmet\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"lodash\");","module.exports = require(\"path\");","module.exports = require(\"request-promise\");","module.exports = require(\"request-promise/errors\");","module.exports = require(\"url-join\");","module.exports = require(\"uuid\");"],"sourceRoot":""}